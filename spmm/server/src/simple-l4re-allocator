// vim:set ft=cpp:

#pragma once

#include <l4/re/env>
#include <l4/re/error_helper>
#include <l4/re/util/cap_alloc>

#include <cstdio>
#include <list>
#include <sys/mman.h>

#include "allocator"

namespace Spmm
{

typedef std::list<Spmm::Dataspace *> DsList;

class SimpleL4ReAllocator : public L4ReAllocator
{
private:
  DsList _ds_list;
  page_t _alloc_p(void);
  void _free_p(page_t p);
public:
  int op_create(L4::Factory::Rights,
                L4::Ipc::Cap<void> &res,
                l4_umword_t type,
                L4::Ipc::Varg_list<> &&args) override;
  page_t alloc_imm_p(page_t p) override;
  page_t alloc_vol_p(page_t p) override;
  void free_imm_p(page_t p) override;
  void free_vol_p(page_t p) override;
};

} //Spmm
